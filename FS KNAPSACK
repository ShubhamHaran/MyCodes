Mounika is creating the binary strings using P 1's and Q 0's.
A binary string contains only 0's and 1's.
She has given a list of binary strings binStr[] to be formed.

Her task is to find, the maximum number of binary strings can be formed, 
with given P 1's and Q 0's only. She cannot use any more 1's or 0's.

Input Format:
-------------
Line-1 -> A single line of space separated binary strings, binStr[].
Line-2 -> Two integers P and Q, P number of 1's and Q number of 0's


Output Format:
--------------
Print an integer as output, maximum number of binary strings can be formed.


Sample Input-1:
---------------
10 0001 111001 1 0
3 5

Sample Output-1:
----------------
4

Explanation:
------------
She can form 4 strings by the using of 3 1's and 5 0's
strings are 10, 0001, 1, 0.


Sample Input-2:
---------------
10 1 0
1 1

Sample Output-2:
----------------
2

Explanation:
------------
She can form 2 strings by the using of 1 1's and 1 0's
strings are 1, 0.

===============================================================

import java.util.*;
class sor{
    static int count(String s,char ch){
        int count=0;
        for(int i=0;i<s.length();i++)
        if(s.charAt(i)==ch) count++;
        return count;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        String arr[]=sc.nextLine().split(" ");
        int p=sc.nextInt();
        int q=sc.nextInt();
        int n=arr.length;
        int zeroes[]=new int[n];
        int ones[]=new int[n];
        int dp[][]=new int[p+1][q+1];
        for(int i=0;i<n;i++)
        {zeroes[i]=count(arr[i],'0');
        ones[i]=arr[i].length()-zeroes[i];}
        for(int i=0;i<n;i++){
            for(int j=p;j>=ones[i];j--){
                for(int k=q;k>=zeroes[i];k--){
                   dp[j][k]=Math.max(dp[j][k],dp[j-ones[i]][k-zeroes[i]]+1);
                }
            }
        }
        System.out.println(dp[p][q]);
        
        
    }
}
