Venkatadri is a maths teacher.
He is teaching matrices to his students.
He is given a matrix of size m*n, and it contains only positive numbers.
He has given a task to his students to find the special matrix, 
in the iven matrix A[m][n].
A special matrix has following property:
	- The sum of elements in each row, each column and the two diagonals are equal.
	- Every 1*1 matrix is called as a special matrix.
	- The size of the special matrix should be a square, i.e., P*P.

Your task is to help the students to find the speical matrix  with max size P.


Input Format:
-------------
Line-1: Two space separated integers M and N, size of the matrix.
Next M lines: N space separated integers m and n.

Output Format:
--------------
Print an integer, maximum size P of the special matrix.


Sample Input-1:
---------------
5 5
7 8 3 5 6
3 5 1 6 7
3 5 4 3 1
6 2 7 3 2
5 4 7 6 2

Sample Output-1:
----------------
3

Explanation:
------------
The special matrix is:
5 1 6
5 4 3
2 7 3


Sample Input-2:
---------------
4 4
7 8 3 5
3 2 1 6
3 2 3 3
6 2 3 3

Sample Output-2:
----------------
2

Explanation:
------------
The special matrix is:
3 3
3 3
===================================
import java.util.*;
class pro{
    static boolean issafe(int arr[][],int i,int j,int k){
        int temp[][]=new int[k][k];
        for(int it=i;it<i+k;it++){
            for(int jt=j;jt<j+k;jt++){
                temp[it-i][jt-j]=arr[it][jt];
            }
        }
        int rowsum[]=new int[k];
        int colsum[]=new int[k];
        int pd=0;
        int rd=0;
        for(int it=0;it<k;it++)
        {
            pd+=temp[it][it];
            rd+=temp[it][k-it-1];
        }
        if(pd!=rd) return false;
        for(int it=0;it<k;it++){
            for(int jt=0;jt<k;jt++){
                colsum[jt]+=temp[it][jt];
                rowsum[it]+=temp[it][jt];
            }
        }
        for(int it=0;it<k;it++)
        if(rowsum[it]!=pd&&colsum[it]!=pd)
        return false;
        return true;
    }
    static int solve(int arr[][],int r,int c,int p){
        for(int k=p;k>=2;k--){
        for(int i=0;i<=r-k;i++){
            for(int j=0;j<=c-k;j++){
                if(issafe(arr,i,j,k))
                return(k);
            }
        }
    }
    return 1;
    }
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int r,c;
        r=sc.nextInt();
        c=sc.nextInt();
        int arr[][]=new int[r][c];
        for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                arr[i][j]=sc.nextInt();
            }
        }
        int p=Math.min(r,c);
        System.out.println(solve(arr,r,c,p));
    }
}
